name: Deploy to Heroku

on:
  push:
    branches:
      - master  # Trigger this action on the master branch

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout the code from GitHub
    - name: Checkout code
      uses: actions/checkout@v3

    # Step 2: Set up Node.js (using the latest LTS version or you can specify another version)
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20'

    # Step 3: Set environment variable for OpenSSL (if needed)
    - name: Set environment variable for OpenSSL
      run: export NODE_OPTIONS=--openssl-legacy-provider

    # Step 4: Install dependencies
    - name: Install dependencies
      run: npm install

    # Step 5: Install the Heroku CLI
    - name: Install Heroku CLI
      run: curl https://cli-assets.heroku.com/install.sh | sh

    # Step 6: Add the SSH key from GitHub Secrets to the agent
    - name: Add SSH key
      uses: webfactory/ssh-agent@v0.5.3
      with:
        ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

    # Step 7: Login to Heroku using API key (you should already have this in GitHub Secrets)
    - name: Login to Heroku using API key
      env:
        HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
      run: heroku auth:token

    # Step 8: Set the Heroku Git remote (replace 'your-heroku-app-name' with your app's actual name)
    - name: Set Heroku git remote
      run: |
        git remote add heroku https://git.heroku.com/stanley-memories.git
        git remote -v  # Verify the Heroku remote is set

    # Step 9: Commit any changes (if needed)
    - name: Commit changes if any
      run: |
        git config --global user.email "slluong@uw.edu"
        git config --global user.name "Stanley Luong"
        git add .
        git commit -m "Automated Deploy" || echo "No changes to commit"

    # Step 10: Deploy to Heroku via SSH (using the SSH key added earlier)
    - name: Deploy to Heroku
      run: git push heroku master --force
